# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: 'ConnectDockerHub'
  imageRepository: 'k8b8nm'
  containerRegistry: 'nemesys34'
  repository: 'nemesys34/k8b8nm'
  kubernetesServiceEndpoint: 'connectK8SNM'
  aksClusterName: 'K8B8NM'

steps:



- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
    namespace: 'qal'
    command: 'get'
    arguments: 'deployments'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
  name: 'kube'

- task: CmdLine@2
  inputs:
    script: |
      versionrep=$(curl -sS 'https://hub.docker.com/v2/repositories/$(repository)/tags' | jq -r '."results"[0]["name"]')
      versionold=$(echo $KUBE_KUBECTLOUTPUT | jq '.items[1].spec.template.spec.containers[].image' | cut -d: -f2 | sed 's/"//')
      versionnew=$(cat azure-vote/main.py | grep -E "^ver = \"[0-9.]+\"\$"|awk -F\" {'print $2'})
      echo "##vso[task.setvariable variable=vernew]$versionnew"
      echo "##vso[task.setvariable variable=verrep]$versionrep"
      sed -i 's/{{ version }}/'$versionnew'/g' manifest/vote-app.yml

- task: Docker@2
  inputs:
    containerRegistry: 'ConnectDockerHub'
    repository: 'nemesys34/k8b8nm'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: $(vernew)

- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'connectK8SNM'
    namespace: 'qal'
    strategy: 'canary'
    percentage: '10'
    manifests: manifest/vote-app.yml
  displayName: 'Deploy to AKS'