
trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: 'ConnectDockerHub'
  imageRepository: 'k8b8nm'
  containerRegistry: 'nemesys34'
  repository: 'nemesys34/k8b8nm'
  kubernetesServiceEndpoint: 'connectK8SNM'
  aksClusterName: 'K8B8NM'

steps:

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: $(kubernetesServiceEndpoint)
    namespace: 'qal'
    command: 'get'
    arguments: 'deployments'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
  name: 'kube'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      versionrep=$(curl -sS "https://hub.docker.com/v2/repositories/$(repository)/tags" | jq -r '."results"[0]["name"]')
      versionold=$(echo $KUBE_KUBECTLOUTPUT | jq '.items[1].spec.template.spec.containers[].image' | cut -d: -f2 | sed 's/"//')
      versionnew=$(awk -F\" '/^ver = "[0-9.]+"/{print $2}' azure-vote/main.py)
      echo "##vso[task.setvariable variable=vernew]$versionnew"
      echo "##vso[task.setvariable variable=verrep]$versionrep"
      sed -i 's/{{ version }}/'$versionnew'/g' manifest/vote-app.yml
      sed -i 's/^\s*- port:\s*[0-9]\{2\}$/  - port: 85/g' manifest/vote-app.yml
      sed -i 's/^\s*number:\s*[0-9]\{2\}$/  number: 85/g' manifest/vote-app.yml
  displayName: 'Mise à jour des versions et des ports'

- task: Docker@2
  inputs:
    containerRegistry: $(dockerRegistryServiceConnection)
    repository: $(repository)
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: $(vernew)
  condition: ne(variables['verrep'], variables['vernew'])
  displayName: 'Build et Push'

- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: $(kubernetesServiceEndpoint)
    namespace: 'qal'
    manifests: manifest/vote-app.yml
  condition: ne(variables['verold'], variables['verrep'])
  displayName: 'Déploiement sur AKS'